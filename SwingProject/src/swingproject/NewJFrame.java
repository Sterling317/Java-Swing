/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swingproject;

import swingproject.Hotel;
import swingproject.Person;
import swingproject.NewJFrame;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.DefaultListModel;
import java.util.Calendar;
import javax.swing.JOptionPane;
/**
 *
 * @author yijunchen
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        FirstName = new javax.swing.JLabel();
        FirstNameField = new javax.swing.JTextField();
        Phone = new javax.swing.JLabel();
        PhoneField = new javax.swing.JTextField();
        Gender = new javax.swing.JLabel();
        ManButton = new javax.swing.JRadioButton();
        WomanButton = new javax.swing.JRadioButton();
        CheckIn = new javax.swing.JLabel();
        CheckInMonthList = new javax.swing.JComboBox<>();
        CheckInDayList = new javax.swing.JComboBox<>();
        People = new javax.swing.JLabel();
        NumberOfPeople = new javax.swing.JSpinner();
        Checkout = new javax.swing.JLabel();
        CheckOutMonthList = new javax.swing.JComboBox<>();
        CheckOutDayList = new javax.swing.JComboBox<>();
        ReserveButton = new javax.swing.JButton();
        LastName = new javax.swing.JLabel();
        LastNameField = new javax.swing.JTextField();
        SingleRoom = new javax.swing.JLabel();
        NumberOfSingleRooms = new javax.swing.JSpinner();
        DoubleRoom = new javax.swing.JLabel();
        NumberOfDoubleRooms = new javax.swing.JSpinner();
        FirstNameTip = new javax.swing.JLabel();
        LastNameTip = new javax.swing.JLabel();
        PhoneTip = new javax.swing.JLabel();
        MapPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BookingList = new javax.swing.JList<>();
        CancelButton = new javax.swing.JButton();
        ViewButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        HotelName = new javax.swing.JLabel();
        Position = new javax.swing.JLabel();
        RemainingSingleRooms = new javax.swing.JLabel();
        Score = new javax.swing.JLabel();
        RemainingDoubleRooms = new javax.swing.JLabel();
        HotelList = new javax.swing.JComboBox<>();
        PositionField = new javax.swing.JLabel();
        RemainingSingleRoom = new javax.swing.JLabel();
        RemainingDoubleRoom = new javax.swing.JLabel();
        ScoreField = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(240, 147, 43));

        jPanel1.setBackground(new java.awt.Color(155, 206, 234));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Information registration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(102, 102, 102))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(235, 77, 75));

        FirstName.setText("First name:");

        FirstNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstNameFieldActionPerformed(evt);
            }
        });
        FirstNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FirstNameFieldKeyPressed(evt);
            }
        });

        Phone.setText("Phone:");

        PhoneField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhoneFieldActionPerformed(evt);
            }
        });
        PhoneField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PhoneFieldKeyPressed(evt);
            }
        });

        Gender.setText("Gender:");

        buttonGroup1.add(ManButton);
        ManButton.setText("Man");
        ManButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(WomanButton);
        WomanButton.setText("Woman");

        CheckIn.setText("Check-in date:");

        CheckInMonthList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        CheckInMonthList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckInMonthListActionPerformed(evt);
            }
        });

        CheckInDayList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        People.setText("Number of people:");

        Checkout.setText("Check-out date:");

        CheckOutMonthList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        CheckOutMonthList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckOutMonthListActionPerformed(evt);
            }
        });

        CheckOutDayList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        ReserveButton.setText("Reserve");
        ReserveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReserveButtonActionPerformed(evt);
            }
        });

        LastName.setText("Last name:");

        LastNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LastNameFieldActionPerformed(evt);
            }
        });
        LastNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LastNameFieldKeyPressed(evt);
            }
        });

        SingleRoom.setText("Single rooms:");

        DoubleRoom.setText("Double rooms:");

        FirstNameTip.setForeground(new java.awt.Color(255, 0, 0));

        LastNameTip.setForeground(new java.awt.Color(255, 0, 0));

        PhoneTip.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(People, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NumberOfPeople)
                                .addGap(297, 297, 297))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(178, 178, 178)
                                .addComponent(SingleRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NumberOfSingleRooms)
                                .addGap(18, 18, 18)
                                .addComponent(DoubleRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NumberOfDoubleRooms)))
                        .addGap(263, 263, 263)
                        .addComponent(ReserveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(FirstNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                                    .addComponent(FirstNameTip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(LastName)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LastNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(Phone)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(PhoneField))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(LastNameTip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(PhoneTip, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(85, 85, 85))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Checkout)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CheckOutMonthList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CheckOutDayList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(CheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CheckInMonthList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CheckInDayList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Gender, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ManButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(WomanButton)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {FirstNameField, LastNameField, PhoneField});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FirstName)
                    .addComponent(FirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LastName)
                    .addComponent(LastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Phone)
                    .addComponent(PhoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PhoneTip, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(FirstNameTip)
                        .addComponent(LastNameTip)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ManButton)
                    .addComponent(WomanButton)
                    .addComponent(Gender))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CheckIn)
                    .addComponent(CheckInMonthList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CheckInDayList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Checkout)
                    .addComponent(CheckOutMonthList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CheckOutDayList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(People)
                        .addComponent(NumberOfPeople, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SingleRoom)
                        .addComponent(NumberOfSingleRooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(DoubleRoom)
                        .addComponent(NumberOfDoubleRooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ReserveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        MapPanel.setBackground(new java.awt.Color(155, 206, 234));
        MapPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Map", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(102, 102, 102))); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swingproject/HotelMap.png"))); // NOI18N

        javax.swing.GroupLayout MapPanelLayout = new javax.swing.GroupLayout(MapPanel);
        MapPanel.setLayout(MapPanelLayout);
        MapPanelLayout.setHorizontalGroup(
            MapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MapPanelLayout.setVerticalGroup(
            MapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(155, 206, 234));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Booking record", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(102, 102, 102))); // NOI18N

        jScrollPane1.setViewportView(BookingList);

        CancelButton.setText("Cancel Order");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        ViewButton.setText("View");
        ViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewButtonActionPerformed(evt);
            }
        });

        ResetButton.setText("Reset");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ViewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CancelButton)
                    .addComponent(ResetButton))
                .addGap(59, 59, 59))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CancelButton, ResetButton, ViewButton});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ViewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ResetButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CancelButton, ResetButton, ViewButton});

        jPanel4.setBackground(new java.awt.Color(155, 206, 234));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hotel information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(102, 102, 102))); // NOI18N

        HotelName.setText("Hotel name:");

        Position.setText("Position:");

        RemainingSingleRooms.setText("Empty single rooms:");

        Score.setText("Score:");

        RemainingDoubleRooms.setText("Empty double room:");

        HotelList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a hotel", "苏州观园琉苏酒店", "苏州独墅湖世尊酒店", "苏州福朋喜来登酒店", "丽枫酒店" }));
        HotelList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HotelListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RemainingDoubleRooms)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(Score)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ScoreField, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RemainingDoubleRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(RemainingSingleRooms)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PositionField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RemainingSingleRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HotelName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Position, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(HotelList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HotelName)
                    .addComponent(HotelList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PositionField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Position))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RemainingSingleRooms)
                    .addComponent(RemainingSingleRoom))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RemainingDoubleRooms)
                    .addComponent(RemainingDoubleRoom))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Score)
                    .addComponent(ScoreField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 168, 255));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setText("Hotel Reservation System");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(306, 306, 306))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MapPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FirstNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstNameFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_FirstNameFieldActionPerformed

    private void ManButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ManButtonActionPerformed

    private void PhoneFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhoneFieldActionPerformed
        // TODO add your handling code her
    }//GEN-LAST:event_PhoneFieldActionPerformed

    private void ReserveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReserveButtonActionPerformed
        // TODO add your handling code here:
        String firstNameString = FirstNameField.getText(); 
        String lastNameString = LastNameField.getText();
        String phoneString = PhoneField.getText();
        String gender = "Unknow";       
        Enumeration<AbstractButton> buttons = buttonGroup1.getElements();
        while (buttons.hasMoreElements()) {
            AbstractButton nextElement = buttons.nextElement();
            if (nextElement.isSelected()) {
                gender = nextElement.getText();
                break;
            }
        }
        String checkInMonth = CheckInMonthList.getSelectedItem().toString();
        String checkInDay = CheckInDayList.getSelectedItem().toString();
        String checkOutMonth = CheckOutMonthList.getSelectedItem().toString();
        String checkOutDay = CheckOutDayList.getSelectedItem().toString();
        String number = NumberOfPeople.getValue().toString();
        String stayDays = daysBetweenDates(checkInMonth, checkInDay, checkOutMonth, checkOutDay) + "";
        String singleRooms = NumberOfSingleRooms.getValue().toString();
        String doubleRooms = NumberOfDoubleRooms.getValue().toString();
        String selectHotel = HotelList.getSelectedItem().toString();
        if (selectHotel == "苏州观园琉苏酒店") {
            String remainSingleRoom = (Integer.parseInt(hotel1.getEmptySingleRooms()) - Integer.parseInt(singleRooms))+"";
            hotel1.setEmptySingleRooms(remainSingleRoom);
            String remainDoubleRoom = (Integer.parseInt(hotel1.getEmptyDoubleRooms()) - Integer.parseInt(doubleRooms))+"";
            hotel1.setEmptyDoubleRooms(remainDoubleRoom);
            RemainingSingleRoom.setText(hotel1.getEmptySingleRooms());
            RemainingDoubleRoom.setText(hotel1.getEmptyDoubleRooms());
            ScoreField.setText(hotel1.getScore());
        } else if (selectHotel == "苏州独墅湖世尊酒店") {
            String remainSingleRoom = (Integer.parseInt(hotel2.getEmptySingleRooms()) - Integer.parseInt(singleRooms))+"";
            hotel2.setEmptySingleRooms(remainSingleRoom);
            String remainDoubleRoom = (Integer.parseInt(hotel2.getEmptyDoubleRooms()) - Integer.parseInt(doubleRooms))+"";
            hotel2.setEmptyDoubleRooms(remainDoubleRoom);
            RemainingSingleRoom.setText(hotel2.getEmptySingleRooms());
            RemainingDoubleRoom.setText(hotel2.getEmptyDoubleRooms());
            ScoreField.setText(hotel2.getScore());
        } else if (selectHotel == "苏州福朋喜来登酒店") {
            String remainSingleRoom = (Integer.parseInt(hotel3.getEmptySingleRooms()) - Integer.parseInt(singleRooms))+"";
            hotel3.setEmptySingleRooms(remainSingleRoom);
            String remainDoubleRoom = (Integer.parseInt(hotel3.getEmptyDoubleRooms()) - Integer.parseInt(doubleRooms))+"";
            hotel3.setEmptyDoubleRooms(remainDoubleRoom);
            RemainingSingleRoom.setText(hotel3.getEmptySingleRooms());
            RemainingDoubleRoom.setText(hotel3.getEmptyDoubleRooms());
            ScoreField.setText(hotel3.getScore());
        } else if (selectHotel == "丽枫酒店") {
            String remainSingleRoom = (Integer.parseInt(hotel4.getEmptySingleRooms()) - Integer.parseInt(singleRooms))+"";
            hotel4.setEmptySingleRooms(remainSingleRoom);
            String remainDoubleRoom = (Integer.parseInt(hotel4.getEmptyDoubleRooms()) - Integer.parseInt(doubleRooms))+"";
            hotel4.setEmptyDoubleRooms(remainDoubleRoom);
            RemainingSingleRoom.setText(hotel4.getEmptySingleRooms());
            RemainingDoubleRoom.setText(hotel4.getEmptyDoubleRooms());
            ScoreField.setText(hotel4.getScore());
        }
        Person newCustomer = new Person(firstNameString,lastNameString,
                phoneString,gender,checkInMonth,checkInDay,checkOutMonth,
                checkOutDay,number,stayDays,singleRooms,doubleRooms,selectHotel
                );
//        System.out.println(newCustomer);
//        System.out.println(gender);
//        System.out.println(number);
        resetAll();
        listModel.addElement(newCustomer);
        BookingList.setModel(listModel);
    }//GEN-LAST:event_ReserveButtonActionPerformed

    public int toDay(String monthStr, String dayStr) {
        int month = Integer.parseInt(monthStr);
        int day = Integer.parseInt(dayStr);
        int year = cal.get(Calendar.YEAR);
//        System.out.println(year);
        // 假如为1月或2月, 分别改为去年的11月和12月
        if (month <= 2) {
            month += 10;
        }
        else month -= 2;// 否则仅需往前2个月
//        return 30 * month + (3 * month - 1) / 5 + day;
        return 365 * year + year / 4 - year / 100 + year / 400 + 30 * month + 
                (3 * month - 1) / 5 + day;

    }
    
    public int daysBetweenDates(String month1, String day1, String month2, String day2) {
        if (Integer.parseInt(month1) != 2) {
            return Math.abs(toDay(month2, day2) - toDay(month1, day1));
        } else if (Integer.parseInt(month2) - Integer.parseInt(month1) == 0){
            return toDay(month2, day2) - toDay(month1, day1);
        } else {
            return toDay(month2, day2) - toDay(month1, day1) + 365;
        }
    }
    
    public void reset() {
        FirstNameField.setText("");
        LastNameField.setText("");
        PhoneField.setText("");
        buttonGroup1.clearSelection();
        CheckInMonthList.setSelectedIndex(0);
        CheckInDayList.setSelectedIndex(0);
        CheckOutMonthList.setSelectedIndex(0);
        CheckOutDayList.setSelectedIndex(0);
        NumberOfPeople.setValue(0);
//        totalSingleRooms -= Integer.parseInt(NumberOfSingleRooms.getValue().toString());
        RemainingSingleRoom.setText("");  
//        totalDoubleRooms -= Integer.parseInt(NumberOfDoubleRooms.getValue().toString());
        RemainingDoubleRoom.setText("");
        NumberOfSingleRooms.setValue(0);
        NumberOfDoubleRooms.setValue(0);
//        HotelList.setSelectedIndex(0);
//        PositionField.setText("");         
//        ScoreField.setText(""); 
    }
    
    public void resetAll() {
        FirstNameField.setText("");
        LastNameField.setText("");
        PhoneField.setText("");
        buttonGroup1.clearSelection();
        CheckInMonthList.setSelectedIndex(0);
        CheckInDayList.setSelectedIndex(0);
        CheckOutMonthList.setSelectedIndex(0);
        CheckOutDayList.setSelectedIndex(0);
        NumberOfPeople.setValue(0);      
        RemainingSingleRoom.setText("");  
        RemainingDoubleRoom.setText("");
        NumberOfSingleRooms.setValue(0);
        NumberOfDoubleRooms.setValue(0);
        HotelList.setSelectedIndex(0);
        PositionField.setText("");         
        ScoreField.setText(""); 
        FirstNameTip.setText("");
        LastNameTip.setText("");
        PhoneTip.setText("");
    }
    
    public void resetHotel() {
        HotelList.setSelectedIndex(0);
        PositionField.setText("");         
        ScoreField.setText("");
        RemainingSingleRoom.setText("");
        RemainingDoubleRoom.setText("");
    }
    
    private void LastNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LastNameFieldActionPerformed
      
    }//GEN-LAST:event_LastNameFieldActionPerformed

    private void ViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewButtonActionPerformed
        // TODO add your handling code here:
        int index = BookingList.getSelectedIndex();
        Person person = (Person) listModel.getElementAt(index);
        String hotel = person.getHotelName();
        
        int confirmResult = JOptionPane.showConfirmDialog(jPanel3,
            "Do you want to view the order?",
            "Tips",
            JOptionPane.YES_NO_OPTION);
        if (confirmResult == 0) {
            FirstNameField.setText(person.getFirstname());
            LastNameField.setText(person.getLastname());
            PhoneField.setText(person.getPhone());
        
            String gender = person.getGender();
            Enumeration<AbstractButton> buttons = buttonGroup1.getElements();
            while (buttons.hasMoreElements()) {
                AbstractButton nextButton = buttons.nextElement();
                if (nextButton.getText().equals(gender)) {
                    nextButton.setSelected(true);
                    break;
                }
            }        
            CheckInMonthList.setSelectedIndex(Integer.parseInt(person.getCheckInMonth()));
            CheckInDayList.setSelectedIndex(Integer.parseInt(person.getCheckInDay()));
            CheckOutMonthList.setSelectedIndex(Integer.parseInt(person.getCheckOutMonth()));
            CheckOutDayList.setSelectedIndex(Integer.parseInt(person.getCheckOutDay()));
            NumberOfPeople.setValue(Integer.parseInt(person.getNumber()));
            NumberOfSingleRooms.setValue(Integer.parseInt(person.getSingleRooms()));
            NumberOfDoubleRooms.setValue(Integer.parseInt(person.getDoubleRooms()));
            if (hotel == "苏州观园琉苏酒店") {
            HotelList.setSelectedIndex(1);
            PositionField.setText(hotel1.getPosition());
            RemainingSingleRoom.setText(hotel1.getEmptySingleRooms());
            RemainingDoubleRoom.setText(hotel1.getEmptyDoubleRooms());
            ScoreField.setText(hotel1.getScore());
        } else if (hotel == "苏州独墅湖世尊酒店") {
            HotelList.setSelectedIndex(2);
            PositionField.setText(hotel2.getPosition());
            RemainingSingleRoom.setText(hotel2.getEmptySingleRooms());
            RemainingDoubleRoom.setText(hotel2.getEmptyDoubleRooms());
            ScoreField.setText(hotel2.getScore());
        } else if (hotel == "苏州福朋喜来登酒店") {
            HotelList.setSelectedIndex(3);
            PositionField.setText(hotel3.getPosition());
            RemainingSingleRoom.setText(hotel3.getEmptySingleRooms());
            RemainingDoubleRoom.setText(hotel3.getEmptyDoubleRooms());
            ScoreField.setText(hotel3.getScore());
        } else if (hotel == "丽枫酒店") {
            HotelList.setSelectedIndex(4);
            PositionField.setText(hotel4.getPosition());
            RemainingSingleRoom.setText(hotel4.getEmptySingleRooms());
            RemainingDoubleRoom.setText(hotel4.getEmptyDoubleRooms());
            ScoreField.setText(hotel4.getScore());
            }
        }
        
    }//GEN-LAST:event_ViewButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        // TODO add your handling code here:
        int index = BookingList.getSelectedIndex();
        int confirmResult = JOptionPane.showConfirmDialog(jPanel3,
            "Do you want to cancel the reservation?",
            "Tips",
            JOptionPane.YES_NO_OPTION);
        if (confirmResult == 0) {
            Person person = (Person) listModel.getElementAt(index);
            String hotel = person.getHotelName();
            if (hotel == "苏州观园琉苏酒店") {                
                hotel1.setEmptySingleRooms((Integer.parseInt(hotel1.getEmptySingleRooms()) + Integer.parseInt(person.getSingleRooms()))+"");
                hotel1.setEmptyDoubleRooms((Integer.parseInt(hotel1.getEmptyDoubleRooms()) + Integer.parseInt(person.getDoubleRooms()))+"");
            } else if (hotel == "苏州独墅湖世尊酒店") {
                hotel2.setEmptySingleRooms((Integer.parseInt(hotel2.getEmptySingleRooms()) + Integer.parseInt(person.getSingleRooms()))+"");
                hotel2.setEmptyDoubleRooms((Integer.parseInt(hotel2.getEmptyDoubleRooms()) + Integer.parseInt(person.getDoubleRooms()))+"");
            } else if (hotel == "苏州福朋喜来登酒店") {
                hotel3.setEmptySingleRooms((Integer.parseInt(hotel3.getEmptySingleRooms()) + Integer.parseInt(person.getSingleRooms()))+"");
                hotel3.setEmptyDoubleRooms((Integer.parseInt(hotel3.getEmptyDoubleRooms()) + Integer.parseInt(person.getDoubleRooms()))+"");
            } else if (hotel == "丽枫酒店") {
                hotel4.setEmptySingleRooms((Integer.parseInt(hotel4.getEmptySingleRooms()) + Integer.parseInt(person.getSingleRooms()))+"");
                hotel4.setEmptyDoubleRooms((Integer.parseInt(hotel4.getEmptyDoubleRooms()) + Integer.parseInt(person.getDoubleRooms()))+"");
            }
            JOptionPane.showMessageDialog(jPanel3,
                "Your order cancelled successfully ",
                "Tips",
                JOptionPane.INFORMATION_MESSAGE
            );
            listModel.remove(index);
        } else {
            
        }
        resetHotel();
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void HotelListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HotelListActionPerformed
        // TODO add your handling code here:
        String hotel = HotelList.getSelectedItem().toString();
        if (hotel == "苏州观园琉苏酒店") {
            PositionField.setText(hotel1.getPosition());
            RemainingSingleRoom.setText(hotel1.getEmptySingleRooms());
            RemainingDoubleRoom.setText(hotel1.getEmptyDoubleRooms());
            ScoreField.setText(hotel1.getScore());
        } else if (hotel == "苏州独墅湖世尊酒店") {
            PositionField.setText(hotel2.getPosition());
            RemainingSingleRoom.setText(hotel2.getEmptySingleRooms());
            RemainingDoubleRoom.setText(hotel2.getEmptyDoubleRooms());
            ScoreField.setText(hotel2.getScore());
        } else if (hotel == "苏州福朋喜来登酒店") {
            PositionField.setText(hotel3.getPosition());
            RemainingSingleRoom.setText(hotel3.getEmptySingleRooms());
            RemainingDoubleRoom.setText(hotel3.getEmptyDoubleRooms());
            ScoreField.setText(hotel3.getScore());
        } else if (hotel == "丽枫酒店") {
            PositionField.setText(hotel4.getPosition());
            RemainingSingleRoom.setText(hotel4.getEmptySingleRooms());
            RemainingDoubleRoom.setText(hotel4.getEmptyDoubleRooms());
            ScoreField.setText(hotel4.getScore());
        }
    }//GEN-LAST:event_HotelListActionPerformed

    private void CheckInMonthListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckInMonthListActionPerformed
        String checkInMonth = CheckInMonthList.getSelectedItem().toString();
//        String checkInDay = CheckInDayList.getSelectedItem().toString();
        if (checkInMonth == "2") {
            CheckInDayList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { 
                "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
                "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22",
                "23", "24", "25", "26", "27", "28" }));
        } else if (checkInMonth == "4"|| checkInMonth == "6" || checkInMonth == "9"
                || checkInMonth == "11"){
            CheckInDayList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { 
                "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
                "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22",
                "23", "24", "25", "26", "27", "28", "29","30" }));
        } else {
            CheckInDayList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { 
                "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
                "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22",
                "23", "24", "25", "26", "27", "28", "29","30","31" }));
        }
    }//GEN-LAST:event_CheckInMonthListActionPerformed

    private void CheckOutMonthListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckOutMonthListActionPerformed

        String checkOutMonth = CheckOutMonthList.getSelectedItem().toString();
//        String checkOutDay = CheckOutDayList.getSelectedItem().toString();
        if (checkOutMonth == "2") {
            CheckOutDayList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { 
                "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
                "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22",
                "23", "24", "25", "26", "27", "28", "29" }));
        } else if (checkOutMonth == "4"|| checkOutMonth == "6" || checkOutMonth == "9"
                || checkOutMonth == "11"){
            CheckOutDayList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { 
                "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
                "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22",
                "23", "24", "25", "26", "27", "28", "29","30" }));
        } else {
            CheckOutDayList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { 
                "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
                "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22",
                "23", "24", "25", "26", "27", "28", "29","30","31" }));
        }
    }//GEN-LAST:event_CheckOutMonthListActionPerformed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        // TODO add your handling code here:
        resetAll();
    }//GEN-LAST:event_ResetButtonActionPerformed

    private void FirstNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FirstNameFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) { //判断按下的键是否是回车键
            if (FirstNameField.getText() == null) {
            FirstNameTip.setText("First name cannot be empty");
        } else if (isNumeric(FirstNameField.getText())) {
            FirstNameTip.setText("First name cannot be numbers");
            }
        }
    }//GEN-LAST:event_FirstNameFieldKeyPressed

    private void LastNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LastNameFieldKeyPressed
        // TODO add your handling code here:        
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            if (LastNameField.getText() == null) {
            LastNameTip.setText("Last name cannot be empty");
        } else if (isNumeric(LastNameField.getText())) {
            LastNameTip.setText("Last name cannot be numbers");
            }
        }
    }//GEN-LAST:event_LastNameFieldKeyPressed

    private void PhoneFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PhoneFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            if (PhoneField.getText() == null) {
            PhoneTip.setText("Phone cannot be empty");
        } else if (!isNumeric(PhoneField.getText())) {
            PhoneTip.setText("Phone cannot be numbers");
            }
        }
    }//GEN-LAST:event_PhoneFieldKeyPressed

    public static boolean isNumeric(String str) {
         // null or empty
        if (str == null || str.length() == 0) {
            return false;
        }
        try {
            Long.parseLong(str);

            return true;
        } catch (NumberFormatException e) {
            try {
                Double.parseDouble(str);

                return false;
            } catch (NumberFormatException ex) {
                try {
                    Float.parseFloat(str);

                    return true;
                } catch (NumberFormatException exx) {
                    try {
                        Integer.parseInt(str);

                        System.out.println("work");
                        return true;
                    } catch (NumberFormatException exxx) {
                        System.out.println("did not");
                        return false;

                    }
                }
            }
        }

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    DefaultListModel listModel = new DefaultListModel();
    Calendar cal = Calendar.getInstance();
    Hotel hotel1 = new Hotel("苏州观园琉苏酒店","苏州工业园区翠薇街168号",300+"",300+"",4.6+"");
    Hotel hotel2 = new Hotel("苏州独墅湖世尊酒店","启月街299号",300+"",300+"",4.7+"");
    Hotel hotel3 = new Hotel("苏州福朋喜来登酒店","工业园区独墅湖月亮湾路8号",300+"",300+"",4.2+"");
    Hotel hotel4 = new Hotel("丽枫酒店","工业园区翰林路1号11栋",300+"",300+"",5.0+"");
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> BookingList;
    private javax.swing.JButton CancelButton;
    private javax.swing.JLabel CheckIn;
    private javax.swing.JComboBox<String> CheckInDayList;
    private javax.swing.JComboBox<String> CheckInMonthList;
    private javax.swing.JComboBox<String> CheckOutDayList;
    private javax.swing.JComboBox<String> CheckOutMonthList;
    private javax.swing.JLabel Checkout;
    private javax.swing.JLabel DoubleRoom;
    private javax.swing.JLabel FirstName;
    private javax.swing.JTextField FirstNameField;
    private javax.swing.JLabel FirstNameTip;
    private javax.swing.JLabel Gender;
    private javax.swing.JComboBox<String> HotelList;
    private javax.swing.JLabel HotelName;
    private javax.swing.JLabel LastName;
    private javax.swing.JTextField LastNameField;
    private javax.swing.JLabel LastNameTip;
    private javax.swing.JRadioButton ManButton;
    private javax.swing.JPanel MapPanel;
    private javax.swing.JSpinner NumberOfDoubleRooms;
    private javax.swing.JSpinner NumberOfPeople;
    private javax.swing.JSpinner NumberOfSingleRooms;
    private javax.swing.JLabel People;
    private javax.swing.JLabel Phone;
    private javax.swing.JTextField PhoneField;
    private javax.swing.JLabel PhoneTip;
    private javax.swing.JLabel Position;
    private javax.swing.JLabel PositionField;
    private javax.swing.JLabel RemainingDoubleRoom;
    private javax.swing.JLabel RemainingDoubleRooms;
    private javax.swing.JLabel RemainingSingleRoom;
    private javax.swing.JLabel RemainingSingleRooms;
    private javax.swing.JButton ReserveButton;
    private javax.swing.JButton ResetButton;
    private javax.swing.JLabel Score;
    private javax.swing.JLabel ScoreField;
    private javax.swing.JLabel SingleRoom;
    private javax.swing.JButton ViewButton;
    private javax.swing.JRadioButton WomanButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
